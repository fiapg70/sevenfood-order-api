server:
  port: 9996
  servlet:
    context-path: /api
  error:
    whitelabel:
      enabled: false

spring:
  main:
    allow-circular-references: true
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
    username: sa
    password:
    driver-class-name: org.h2.Driver
    connectionTimeout: 30000
    idleTimeout: 30000
    max-open-prepared-statements: 250
    maxLifetime: 2000000
    maximumPoolSize: 5
    minimumIdle: 3
    pool-prepared-statements: true
    poolName: SpringBootHikariCP
    hikari:
      connection-timeout: '60000'
  jpa:
    hibernate:
      ddl-auto: create-drop # ou 'update' se quiser manter os dados entre as execuções
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: h2
    database-platform: org.hibernate.dialect.H2Dialect
  flyway:
    baselineOnMigrate: true
    locations: classpath:db/migration, classpath:db/callback
  h2:
    console:
      enabled: true
      path: /h2-console

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}
      secret-key: ${AWS_SECRET_ACCESS_KEY}
    region:
      static: us-east-1
  sqs:
    enabled: true
    endpoint: ${AWS_ENDPOINT_URL}
  security:
    oauth2:
      client:
        provider:
          cognito:
            issuer-uri: ${AWS_COGNITO_ISSUER_URI}
        registration:
          cognito:
            client-id: ${AWS_COGNITO_CLIENT_ID}
            client-secret: ${AWS_COGNITO_CLIENT_SECRET}
            scope: openid

application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      expiration: 864000000 # 10 day
      refresh-token:
        expiration: 6048000000 # 70 days

cognito:
  user-pool-id: ${AWS_COGNITO_USER_POOL_ID}

app:
  queue-sqs:
    name: ${AWS_SQS_QUEUE_NAME}
  queue-status-sqs:
    name: ${AWS_SQS_QUEUE_STATUS_NAME}
